#!/usr/bin/env python3
import platform
import pwd

from collections import defaultdict
from pathlib import Path

if __name__ == '__main__':
    usage = defaultdict(int)
    procs = defaultdict(list)

    print('SWAP usage on {}'.format(platform.node()))
    for stat in Path('/proc').glob('[0-9]*'):
        stat = stat / 'status'
        try:
            data = stat.open().read().strip().split('\n')
        except Exception as e:
            pass
        finally:
            for line in data:
                if line.startswith('Name'):
                    proc = line.split('\t')[1]
                if line.startswith('Pid'):
                    pid = int(line.split('\t')[1])
                if line.startswith('Uid'):
                    uid = int(line.split()[1])
                elif line.startswith('VmSwap'):
                    swap = int(line.split()[1])
                    usage[uid] += swap
                    if swap > 0:
                        procs[uid].append((proc, pid, swap))

    usage = sorted(usage.items(), key=lambda x: x[1], reverse=True)
    for uid, kbytes in usage:
        if kbytes > 0:
            name = pwd.getpwuid(uid).pw_name
            print('{:20} {:6.6} MB'.format(name, kbytes / 1024.))
            _procs = sorted(procs[uid], key=lambda x: x[2], reverse=True)
            for pname, pid, kbyte in _procs:
                print('{:10} {:20} {:6.6} MB'.format(
                    pid, pname, kbyte / 1024.))
